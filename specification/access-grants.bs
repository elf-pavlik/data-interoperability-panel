Access Grants {#grants}
=====================

[=Access Grants=] represent a [=Social Agent's=] decision to grant access to
some portion of the data in their control to another [=Agent=]. They provide
the context needed to effectively manage permissions on a given 
[=Social Agent's=] data through a compatible access control system.

There are two types of [=Access Grants=]:

* [=Trusted Grants=] are made when a given [=Social Agent=] trusts another [=Agent=]
    with expanded, administrative-level privilege to the data in their control.
* [=Data Grants=] are made when a given [=Social Agent=] wishes to share access
    to certain types or specific instances of data in their control.

[=Access Grants=] are recorded in a [=Social Agent's=] [=Access Grant Registry=].

[=Access Invitations=] represent [=Access Grants=] made to [=Social Agents=] 
with unknown or yet-to-be established [=identities=].

Note: See 
[Solid Application Interoperability Operations and API](https://solid.github.io/data-interoperability-panel/api/#grants)
for a detailed explanation of how Access Grants should be processed.

## Access Grant Registry ## {#access-grant-registry}

An <dfn>Access Grant Registry</dfn> is a collection of
[=Access Grants=] stored in a specific location in a [=pod=].

The [=Access Grant Registry=] is linked to a [=Social Agent=] via their [=Registry Set=].

An [=Access Grant Registry=] links to any number of registered [=Access Grants=]
and [=Access Invitations=].

[Class Definition](interop.ttl#AccessGrantRegistry) -
[Shape Definition](interop.shex#AccessGrantRegistryShape) -
[Shape Tree Definition](interop.tree#AccessGrantRegistryTree)

<table class="classinfo data" align="left" id="classAccessGrantRegistry">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasRegistration</td>
      <td>[Registration](interop.ttl#Registration)</td>
      <td>Link to associated [=Access Grants=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Access Grant Registry=] at https://alice.example/grants/
  linking to several registered [=Access Grants=] or
  [=Access Invitations=].</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/grant-registry.ttl
  highlight: turtle
  show: 5-11
  </pre>
</figure>

## Access Grant ## {#access-grant}

Each <dfn>Access Grant</dfn> represents access granted to an
[=Access Grant Subject=], based on access criteria detailed in one or more
[=Access Need Groups=].

Access may be granted to data in
[=Data Registries=] through [=Data Grants=].

Elevated access to [=Registries=], as well as the [=Identity Profile Document=]
or [=Registry Set=] of the [=Social Agent=] may be granted through 
[=Trusted Grants=].

[Class Definition](interop.ttl#AccessGrant) -
[Shape Definition](interop.shex#AccessGrantShape) -
[Shape Tree Definition](interop.tree#AccessGrantTree)

<table class="classinfo data" align="left" id="classAccessGrant">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>registeredBy</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] that registered the [=Access Grant=]</td>
    </tr>
    <tr>
      <td>registeredWith</td>
      <td>[Application](#classApplication)</td>
      <td>[=Application=] used to create the [=Access Grant=]</td>
    </tr>
    <tr>
      <td>registeredAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Access Grant=] was created</td>
    </tr>
    <tr>
      <td>updatedAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Access Grant=] was updated</td>
    </tr>
    <tr>
      <td>hasAccessGrantSubject</td>
      <td>[AccessGrantSubject](#classAccessGrantSubject)</td>
      <td>Links to the [=Access Grant Subject=] that was granted access.</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>Links to an [=Access Need Group=] associated with the Access Grant.</td>
    </tr>
    <tr>
      <td>hasDataGrant</td>
      <td>[DataGrant](#classDataGrant)</td>
      <td>Links to a [=Data Grant=] associated with the Access Grant.</td>
    </tr>
    <tr>
      <td>hasTrustedGrant</td>
      <td>[TrustedGrant](#classTrustedGrant)</td>
      <td>Links to a [=Trusted Grant=] associated with the Access Grant.</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Access Grant=] at
  https://alice.pod.example/grants/ab3d0023-3860-4358-ae33-8d3af1097b9d</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/ab3d0023-3860-4358-ae33-8d3af1097b9d.ttl
  highlight: turtle
  show: 13-26
  </pre>
</figure>

## Access Grant Subject ## {#access-grant-subject}

An <dfn>Access Grant Subject</dfn> represents a unique combination of
who and what is being granted access. For example, it allows a single 
[=Social Agent=] or [=Application=] to be specified, or a given 
[=Social Agent=] using a given [=Application=].

[Class Definition](interop.ttl#AccessGrantSubject) -
[Shape Definition](interop.shex#AccessGrantSubjectShape)

<table class="classinfo data" align="left" id="classAccessGrantSubject">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>accessBySocialAgent</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] being granted access</td>
    </tr>
    <tr>
      <td>accessByApplication</td>
      <td>[Application](#classApplication)</td>
      <td>[=Application=] being granted access</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>The [=Access Grant Subject=] of the [=Access Grant=] at
  https://alice.example/grants/ab3d0023-3860-4358-ae33-8d3af1097b9d</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/ab3d0023-3860-4358-ae33-8d3af1097b9d.ttl
  highlight: turtle
  show: 21-24
  </pre>
</figure>

## Data Grant ## {#data-grant}

A <dfn>Data Grant</dfn> records a decision made by a
[=Social Agent=] to assign permissions for an [=Access Grant Subject=] to a
[=Data Registration=], in response to a given [=Access Need=] that was
presented to them.

A [=Data Grant=] may inherit from another [=Data Grant=], when the
[=shape tree=] associated via `interop:registeredShapeTree` has one or
more [=Shape Tree References=].

Each [=Data Grant=] has an assigned scope (`interop:scopeOfGrant`), which
determines how permissions are assigned. The following types are
valid for a [=Data Grant=]:

* <b>`interop:AllInstances`</b>
    * Applies to all [=Data Instances=] belonging to
        the associated [=Data Registration=].
    * Permissions will be set for the [=Access Grant Subject=] on the
        [=Data Registration=] container,
        and will be inherited by all member [=Data Instances=].
* <b>`interop:SelectedInstances`</b>
    * Applies only to selected [=Data Instances=]
        belonging to the associated [=Data Registration=], which are linked
        to the [=Data Grant=] via `interop:hasDataInstance`.
    * Permissions will be set for the [=Access Grant Subject=] on
        each [=Data Instance=].
* <b>`interop:InheritInstances`</b>
  *  When the [=Data Grant=] linked via
     `interop:inheritsFromGrant` has a scope of `interop:AllInstances`, or a scope
     of `interop:SelectedInstances` with one
     or more [=Data Instances=] selected, any inheriting [=Data Grants=]
     have the opportunity to narrow their own access scope to only include
     "child" [=Data Instances=] linked to the "parent" [=Data Instances=].
  * The link must follow the [=Shape Tree Reference=] between
    the parent [=Data Grant=] shape tree and the inheriting [=Data Grant=]
    shape tree.
  * Permissions are set conditionally for the [=Access Grant Subject=],
    and have the benefit of applying to current and future [=Data Instances=]
    associated with a parent [=Data Instance=].
* <b>`interop:NoAccess`</b>
    * Indicates that no access is granted to the [=Access Grant Subject=].
    * Applies to the entire [=Data Registration=] when there are no
        [=Data Instances=] linked via `interop:hasDataInstance`.
    * When there are [=Data Instances=] linked via `interop:hasDataInstance`,
        this scope only applies to them.

When recording a [=Data Grant=] via [[SAI-API#grants-recordgrant]]:

* There must be an [=Access Need=] linked via `interop:satisfiesAccessNeed` that
    belongs to an [=Access Need Group=] linked to the same [=Access Grant=].
* [=Access Need=] and [=Data Grant=] must have the same `interop:registeredShapeTree`

[Class Definition](interop.ttl#DataGrant) -
[Shape Definition](interop.shex#DataGrantShape) -
[Shape Tree Definition](interop.tree#DataGrantTree)

<table class="classinfo data" align="left" id="classDataGrant">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>dataOwner</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] that owns the data being granted</td>
    </tr>
    <tr>
      <td>registeredShapeTree</td>
      <td>st:ShapeTree</td>
      <td>[=Data Registration=] for the [=shape tree=] that access
      will be granted to</td>
    </tr>
    <tr>
      <td>hasDataRegistration</td>
      <td>[DataRegistration](#classDataRegistration)</td>
      <td>[=Data Registration=] for registeredShapeTree that the
      [=Data Grant=] applies to</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>acl:Read, acl:Write, acl:Control, acl:Append</td>
      <td>Modes of access granted to the target data at hasRegistration</td>
    </tr>
    <tr>
      <td>creatorAccessMode</td>
      <td>`acl:Read, acl:Write, acl:Control, acl:Append`</td>
      <td>Additional access mode assigned to the creator of a
        data instance. Adds to the set of modes linked via 
        `interop:accessMode`. Only valid when `accessMode` includes
         `acl:Write` or `acl:Append`</td>
    </tr>
    <tr>
      <td>scopeOfGrant</td>
      <td> interop:AllInstances, interop:SelectedInstances,
      interop:NoAccess</td>
      <td>Identifies the access scope of the [=Data Grant=]
        <ul>
          <li>interop:AllInstances - Scope includes
              access to all [=Data Instances=] of the associated
              [=Data Registration=]</li>
          <li>interop:SelectedInstances - Scope includes
              access only to those [=Data Instances=] specifically
              selected by the [=Social Agent=]</li>
          <li>interop:NoAccess - No access is granted</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>hasDataInstance</td>
      <td>Instance of registeredShapeTree</td>
      <td>Links to a [=Data Instance=] of registeredShapeTree.</td>
    </tr>
    <tr>
      <td>inheritsFromGrant</td>
      <td>[DataGrant](#classDataGrant)</td>
      <td>Links to another [=Data Grant=] whose registeredShapeTree
      references the shape tree associated with the current
      [=Data Grant=].</td>
    </tr>
    <tr>
      <td>satisfiesAccessNeed</td>
      <td>[AccessNeed](#classAccessNeed)</td>
      <td>Links to the [=Access Need=] satisfied by the [=Data Grant=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Data Grants=] for Projects and Issues</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/ab3d0023-3860-4358-ae33-8d3af1097b9d.ttl
  highlight: turtle
  show: 33-55
  </pre>
</figure>

## Trusted Grant ## {#datamodel-trusted-grant}

A <dfn>Trusted Grant</dfn> records a decision made by a
given [=Social Agent=] to trust another with elevated access to any 
[=Registries=], [=Registry Set=], or [=Identity Profile Document=]
for the [=Social Agent=], based on a [=Trusted Need=] that was
presented to them.

A <dfn>Trusted Agent</dfn> is an [=Agent=] that been granted elevated
access through a [=Trusted Grant=].

Each [=Trusted Grant=] represents accessed assigned to a trusted
resource identified by `interop:trustedWith`, of a given type, indicated by
`interop:trustedWithType`.

Each [=Trusted Grant=] has an assigned scope (`interop:scopeOfGrant`), which
determines how permissions are assigned. The following types are
valid for a [=Trusted Grant=]:

* <b>`interop:TrustedAccess`</b> - Applies to trusted resource linked
    via `interop:trustedWith`. Permissions will
    be set for the [=Access Grant Subject=] on the trusted resource. If
    `trustedWithType` is for the [=Registry Set=], the permissions
    will be applied to the [=Registry Set=] resource, as well as all of
    the [=Registries=] linked from it.
* <b>`interop:NoAccess`</b> - Indicates that no access is granted
    to `trustedWith`. If `trustedWith` is for the [=Registry Set=],
    it indicates that no access is granted to the [=Registry Set=] resource,
    nor to the [=Registries=] linked from it.

[Class Definition](interop.ttl#TrustedGrant) -
[Shape Definition](interop.shex#TrustedGrantShape)

<table class="classinfo data" align="left" id="classTrustedGrant">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAccessGrant</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[=Access Grant=] that the [=Trusted Grant=] belongs to</td>
    </tr>
    <tr>
      <td>satisfiesTrustedNeed</td>
      <td>[TrustedNeed](#classTrustedNeed)</td>
      <td>Links to the [=Trusted Need=] satisfied by the [=Trusted Grant=]</td>
    </tr>
    <tr>
      <td>trustedWith</td>
      <td>[=Social Agent=], [=Registry Set=], [=Registry=]</td>
      <td>Identifies the primary trusted resource of the [=Trusted Grant=]
        <ul>
          <li>[=Social Agent=] - Access to the profile document of the [=Social Agent=]</li>
          <li>[=Registry Set=] - Access to the specified [=Registry Set=]
          and all of the [=Registries=] linked to it</li>
          <li>[=Registry=] - Access to the specified [=Registry=],
          as well as all [=Registrations=] linked to it</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td>trustedWithType</td>
      <td><ul>
        <li>`interop:SocialAgent`</li>
        <li>`interop:RegistrySet`</li>
        <li>`interop:AgentRegistry`</li>
        <li>`interop:DataRegistry`</li>
        <li>`interop:AccessGrantRegistry`</li>
        <li>`interop:AccessReceiptRegistry`</li>
      </ul></td>
      <td>Specific type of instance linked via `trustedWith`</td>
    </tr>
    <tr>
      <td>accessMode</td>
      <td>acl:Read, acl:Write, acl:Control, acl:Append</td>
      <td>Mode of access being granted to the instance linked via `trustedWith`</td>
    </tr>
    <tr>
      <td>scopeOfGrant</td>
      <td>interop:NoAccess, interop:TrustedAccess</td>
      <td>Current scope of trusted access</td>
    </tr>
  </tbody>
</table>

## Access Invitation ## {#datamodel-access-invitation}

An <dfn>Access Invitation</dfn> is a subclass of [=Access Grant=] used when
a [=Social Agent=] wishes to grant access to another [=Social Agent=] whose
decentralized [=identity=] is unknown to them, or may not exist yet, so they
must be first invited through another channel (such as phone or email).

Like an [=Access Grant=], an [=Access Invitation=] links to access
criteria detailed in one or more [=Access Need Groups=], with
associated [=Data Grants=] or [=Trusted Grants=] indicating the
intended access to be granted.

However, instead of linking to an [=Access Grant Subject=], an
[=Access Invitation=] links to one or more [=Access Invitation Channels=].

Each channel represents a mechanism through which the invitation can
be delivered and validated. The mechanism is designed so that multiple
channels may be validated before an invitation is confirmed and
converted to an [=Access Grant=].

[Class Definition](interop.ttl#AccessInvitation) -
[Shape Definition](interop.shex#AccessInvitationShape) -
[Shape Tree Definition](interop.tree#AccessInvitationTree)

<table class="classinfo data" align="left" id="classAccessInvitation">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>registeredBy</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] that registered the [=Access Invitation=]</td>
    </tr>
    <tr>
      <td>registeredWith</td>
      <td>[Application](#classApplication)</td>
      <td>[=Application=] used to create the [=Access Invitation=]</td>
    </tr>
    <tr>
      <td>registeredAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Access Invitation=] was created</td>
    </tr>
    <tr>
      <td>updatedAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Access Invitation=] was updated</td>
    </tr>
    <tr>
      <td>expiresAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Access Invitation=] expires</td>
    </tr>
    <tr>
      <td>hasAccessInvitationChannel</td>
      <td>[AccessInvitationChannel](#classAccessInvitationChannel)</td>
      <td>Links to an [=Access Invitation Channel=]</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>Links to an [=Access Need Group=] associated with
      the [=Access Invitation=].</td>
    </tr>
    <tr>
      <td>hasDataGrant</td>
      <td>[DataGrant](#classDataGrant)</td>
      <td>Links to a [=Data Grant=] associated with the
      [=Access Invitation=].</td>
    </tr>
    <tr>
      <td>hasTrustedGrant</td>
      <td>[TrustedGrant](#classTrustedGrant)</td>
      <td>Links to a [=Trusted Grant=] associated with the
      [=Access Invitation=].</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>An [=Access Invitation=] at
  https://alice.example/grants/08c5ae76-6c83-46f8-8e1d-eb14219e7f5f</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/08c5ae76-6c83-46f8-8e1d-eb14219e7f5f.ttl
  highlight: turtle
  show: 13-27
  </pre>
</figure>

## Access Invitation Channel ## {#datamodel-access-invitation-channel}

An <dfn>Access Invitation Channel</dfn> represents a mechanism through
which an [=Access Invitation=] can be delivered and validated.

[Class Definition](interop.ttl#AccessInvitationChannel) -
[Shape Definition](interop.shex#AccessInvitationChannelShape)

<table class="classinfo data" align="left" id="classAccessInvitationChannel">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>rdf:type</td>
      <td>interop:PhoneInvitationChannel,
      interop:EmailInvitationChannel,
      interop:SMSInvitationChannel,
      interop:OfflineInvitationChannel,
      interop:LDNInvitationChannel</td>
      <td>Each channel is represented by a subClassOf
      AccessInvitationChannel</td>
    </tr>
    <tr>
      <td>channelTarget</td>
      <td>xsd:string</td>
      <td>Target used when validating the channel</td>
    </tr>
    <tr>
      <td>channelCode</td>
      <td>xsd:string</td>
      <td>Code used for channel validation</td>
    </tr>
    <tr>
      <td>isValidated</td>
      <td>xsd:boolean</td>
      <td>Indicates whether the channel has been validated</td>
    </tr>
    <tr>
      <td>remainingAttempts</td>
      <td>xsd:integer</td>
      <td>Number of allowed validation attempts remaining</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Access Invitation Channels=] in the [=Access Invitation=] at
  https://alice.example/grants/08c5ae76-6c83-46f8-8e1d-eb14219e7f5f</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/08c5ae76-6c83-46f8-8e1d-eb14219e7f5f.ttl
  highlight: turtle
  show: 29-41
  </pre>
</figure>

## Resource Hierarchy ## {#grants-hierarchy}

<table class="data tree" align="left">
  <col>
  <col>
  <col>
  <col>
  <thead>
    <tr>
      <th>Resource</th>
      <th>Class</th>
      <th>Shape</th>
      <th>Shape Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>`/grants/`</td>
      <td>[AccessGrantRegistry](#classAccessGrantRegistry)</td>
      <td>[AccessGrantRegistryShape](interop.shex#AccessGrantRegistryShape)</td>
      <td>[AccessGrantRegistryTree](interop.tree#AccessGrantRegistryTree)</td>
    </tr>
    <tr>
      <td>`-- c482f931...630e5ab0`</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[AccessGrantShape](interop.shex#AccessGrantShape)</td>
      <td>[AccessGrantTree](interop.tree#AccessGrantTree)</td>
    </tr>
    <tr>
      <td>`-- e0983a7e...88c387ea`</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[AccessGrantShape](interop.shex#AccessGrantShape)</td>
      <td>[AccessGrantTree](interop.tree#AccessGrantTree)</td>
    </tr>
    <tr>
      <td>`-- eddf13d6...7f4962c5`</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[AccessGrantShape](interop.shex#AccessGrantShape)</td>
      <td>[AccessGrantTree](interop.tree#AccessGrantTree)</td>
    </tr>
    <tr>
      <td>`-- a990c1b9...c041eb74`</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[AccessGrantShape](interop.shex#AccessGrantShape)</td>
      <td>[AccessGrantTree](interop.tree#AccessGrantTree)</td>
    </tr>
    <tr>
      <td>`-- 265ef957...6689aee7`</td>
      <td>[AccessGrant](#classAccessGrant)</td>
      <td>[AccessGrantShape](interop.shex#AccessGrantShape)</td>
      <td>[AccessGrantTree](interop.tree#AccessGrantTree)</td>
    </tr>
  </tbody>
</table>

The [=Access Grant Registry=] resources MAY use any resource or subject name.

The resource names for [=Access Grants=] <em class="rfc2119">SHOULD</em> 
be unpredictable.
