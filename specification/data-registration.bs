Data Registration {#dr}
=====================

Data Registration lets [=Social Agents=] store and manage the 
data they control. Data of various types is organized and stored in a 
uniform way to aid validation, authorization, 
discovery, and more.

Complex hierarchies that hinder interoperability are avoided
by storing data in a relatively flat hierarchy. This creates natural
data boundaries that make data storage and authorization more intuitive.

Note: See
[Solid Application Interoperability Operations and API](https://solid.github.io/data-interoperability-panel/api/#datareg)
for a detailed explanation of how Data Registrations should be processed.

## Data Registry ## {#data-registry}

A <dfn>Data Registry</dfn> is a collection of [=Data Registrations=], each
of which represents a unique type of data, identified by a [=shape tree=].

A [=Data Registry=] can be used for basic discovery, but it is not
designed nor intended to be an efficient means to query or index data.
However, it is *intended* to be used as reliable source data for different
query engines or indexing schemes.

A [=Data Registry=] is linked to a [=Social Agent=] via their [=Registry Set=].

[Class Definition](interop.ttl#DataRegistry) -
[Shape Definition](interop.shex#DataRegistryShape) -
[Shape Tree Definition](interop.tree#DataRegistryTree)

<table class="classinfo data" align="left" id="classDataRegistry">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasRegistration</td>
      <td>[DataRegistration](#classDataRegistration)</td>
      <td>Link to an associated [=Data Registration=]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>A [=Data Registry=] at https://work.alice.example/data/ 
  linking to several [=Data Registrations=]</figcaption>
  <pre class=include-code>
  path: snippets/work.alice.example/data-registry.ttl
  highlight: turtle
  show: 5-13
  </pre>
</figure>

## Data Registration ## {#data-registration}

A <dfn>Data Registration</dfn> provides the [=Social Agent=] 
with a place to store [=Data Instances=] that conform to the
registered [=shape tree=] of that registration, indicated by the
[interop:registeredShapeTree](#classDataRegistration) property.

A <dfn>Data Instance</dfn> is a unique, stored instance of data
that conforms to the [=shape tree=] for the instance's 
[=Data Registration=].

Each [=Data Instance=] is linked to the [=Data Registration=] via the
<a href="https://www.w3.org/ns/ldp#contains" class="vocab">ldp:contains</a>
property.

[Class Definition](interop.ttl#DataRegistration) -
[Shape Definition](interop.shex#DataRegistrationShape) -
[Shape Tree Definition](interop.tree#DataRegistrationTree)

<table class="classinfo data" align="left" id="classDataRegistration">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>registeredBy</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] that registered the [=Data Registration=]</td>
    </tr>
    <tr>
      <td>registeredWith</td>
      <td>[Application](#classApplication)</td>
      <td>[=Application=] used to create the [=Data Registration=]</td>
    </tr>
    <tr>
      <td>registeredAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Data Registration=] was created</td>
    </tr>
    <tr>
      <td>updatedAt</td>
      <td>xsd:dateTime</td>
      <td>Date and time the [=Data Registration=] was updated</td>
    </tr>
    <tr>
      <td>registeredShapeTree</td>
      <td><a href="https://w3.org/ns/st/terms" class="vocab">st:ShapeTree</a></td>
      <td>The [=Shape Tree=] that was registered</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>A [=Data Registration=] at https://work.alice.example/data/8501f084-deb9-4775-8a35-2040df435d21/</figcaption>
  <pre class=include-code>
  path: snippets/work.alice.example/8501f084-deb9-4775-8a35-2040df435d21.ttl
  highlight: turtle
  show: 8-14
  </pre>
</figure>

## Resource Hierarchy ## {#dr-hierarchy}

<table class="data tree" align="left">
  <col>
  <col>
  <col>
  <col>
  <thead>
    <tr>
      <th>Resource</th>
      <th>Class</th>
      <th>Shape</th>
      <th>Shape Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>`/data/`</td>
      <td>[DataRegistry](#classDataRegistry)</td>
      <td>[DataRegistryShape](interop.shex#DataRegistry)</td>
      <td>[DataRegistryTree](interop.tree#DataRegistry)</td>
    </tr>
    <tr>
      <td>`-- 8501f084...2040df43/`</td>
      <td>[DataRegistration](#classDataRegistration)</td>
      <td>[DataRegistrationShape](interop.shex#DataRegistration)</td>
      <td>[DataRegistrationTree](interop.tree#DataRegistration),
          [ProjectRegistrationTree](snippets/data.example/pm-shapetrees.tree#ProjectRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 16e1eae9...ca3805c4/`</td>
      <td>[Project](snippets/data.example/pm-vocab.ttl#Project)</td>
      <td>[ProjectShape](snippets/data.example/pm-shapes.shex#ProjectShape)</td>
      <td>[ProjectTree](snippets/data.example/pm-shapetrees.tree#ProjectTree)</td>
    </tr>
    <tr>
      <td>`---- 886785d2...5ac36b7b/`</td>
      <td>[Project](snippets/data.example/pm-vocab.ttl#Project)</td>
      <td>[ProjectShape](snippets/data.example/pm-shapes.shex#ProjectShape)</td>
      <td>[ProjectTree](snippets/data.example/pm-shapetrees.tree#ProjectTree)</td>
    </tr>
    <tr>
      <td>`---- dae5015c...7ca7a198/`</td>
      <td>[Project](snippets/data.example/pm-vocab.ttl#Project)</td>
      <td>[ProjectShape](snippets/data.example/pm-shapes.shex#ProjectShape)</td>
      <td>[ProjectTree](snippets/data.example/pm-shapetrees.tree#ProjectTree)</td>
    </tr>
    <tr>
      <td>`-- df4ab227...fad10fb9/`</td>
      <td>[DataRegistration](#classDataRegistration)</td>
      <td>[DataRegistrationShape](interop.shex#DataRegistration)</td>
      <td>[DataRegistrationTree](interop.tree#DataRegistration),
          [TaskRegistrationTree](snippets/data.example/pm-shapetrees.tree#TaskRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 9b60a354...cb9da85c/`</td>
      <td>[Task](snippets/data.example/pm-vocab.ttl#Task)</td>
      <td>[TaskShape](snippets/data.example/pm-shapes.shex#TaskShape)</td>
      <td>[TaskTree](snippets/data.example/pm-shapetrees.tree#TaskTree)</td>
    </tr>
    <tr>
      <td>`---- 6e545b74...b15cbdce/`</td>
      <td>[Task](snippets/data.example/pm-vocab.ttl#Task)</td>
      <td>[TaskShape](snippets/data.example/pm-shapes.shex#TaskShape)</td>
      <td>[TaskTree](snippets/data.example/pm-shapetrees.tree#TaskTree)</td>
    </tr>
    <tr>
      <td>`---- d33e01c8...ac9e3cc6/`</td>
      <td>[Task](snippets/data.example/pm-vocab.ttl#Task)</td>
      <td>[TaskShape](snippets/data.example/pm-shapes.shex#TaskShape)</td>
      <td>[TaskTree](snippets/data.example/pm-shapetrees.tree#TaskTree)</td>
    </tr>
    <tr>
      <td>`---- 927108fa...14985cb9/`</td>
      <td>[Task](snippets/data.example/pm-vocab.ttl#Task)</td>
      <td>[TaskShape](snippets/data.example/pm-shapes.shex#TaskShape)</td>
      <td>[TaskTree](snippets/data.example/pm-shapetrees.tree#TaskTree)</td>
    </tr>
    <tr>
      <td>`---- 180dda0b...c4f8c4dc/`</td>
      <td>[Task](snippets/data.example/pm-vocab.ttl#Task)</td>
      <td>[TaskShape](snippets/data.example/pm-shapes.shex#TaskShape)</td>
      <td>[TaskTree](snippets/data.example/pm-shapetrees.tree#TaskTree)</td>
    </tr>
    <tr>
      <td>`-- 3c9c9cff...fc7f916b/`</td>
      <td>[DataRegistration](#classDataRegistration)</td>
      <td>[DataRegistrationShape](interop.shex#DataRegistration)</td>
      <td>[DataRegistrationTree](interop.tree#DataRegistration),
          [MilestoneRegistrationTree](snippets/data.example/pm-shapetrees.tree#MilestoneRegistrationTree)</td>
    </tr>
    <tr>
      <td>`---- 4376595a...f8d2547c/`</td>
      <td>[Milestone](snippets/data.example/pm-vocab.ttl#Milestone)</td>
      <td>[MilestoneShape](snippets/data.example/pm-shapes.shex#MilestoneShape)</td>
      <td>[MilestoneTree](snippets/data.example/pm-shapetrees.tree#MilestoneTree)</td>
    </tr>
    <tr>
      <td>`---- 14c9fc6a...7f6de3ca/`</td>
      <td>[Milestone](snippets/data.example/pm-vocab.ttl#Milestone)</td>
      <td>[MilestoneShape](snippets/data.example/pm-shapes.shex#MilestoneShape)</td>
      <td>[MilestoneTree](snippets/data.example/pm-shapetrees.tree#MilestoneTree)</td>
    </tr>
  </tbody>
</table>

The [=Data Registry=] resource <em class="rfc2119">MAY</em> use any
resource or subject name.

The resource names for [=Data Registrations=] and [=Data Instances=]
<em class="rfc2119">SHOULD</em> be unpredictable.

A [=Data Registration=] container <em class="rfc2119">MUST</em>
contain conformant instances of the [=shape tree=] associated with the
[=Data Registration=] via
[interop:registeredShapeTree](#classDataRegistration).

Two complementary [=shape trees=] <em class="rfc2119">MUST</em> be assigned
to the same [=Data Registration=] container to ensure that it conforms
to general validation requirements, and to ensure
that it only contains [=Data Instances=] of the registered
[=shape tree=] identified by
[interop:registeredShapeTree](#classDataRegistration).

In the [figure below](#fig-datareg-intersecting), the
combination of a [DataRegistrationTree](interop.tree#DataRegistration)
and [ProjectRegistrationTree](snippets/data.example/pm-shapetrees.tree#ProjectRegistrationTree) on the
same [=Data Registration=] can be observed. Furthermore, an example of
a contained [=Data Instance=] is provided, which conforms
to [ProjectTree](snippets/data.example/pm-shapetrees.tree#ProjectTree) per the directive in
[ProjectRegistrationTree](snippets/data.example/pm-shapetrees.tree#ProjectRegistrationTree).

<figure id="fig-datareg-intersecting">
  <figcaption>Intersecting [=shape trees=] for a [=Data Registration=]
  and the [=shape tree=] registered with it
  </figcaption>
  <table class="data intersecting" align="left">
    <col>
    <col>
    <tbody>
      <tr>
        <td colspan=2>
        `-- 8501f084-deb9-4775-8a35-2040df435d21/`
        </td>
      </tr>
      <tr>
        <td>
          Contents of the [=Data Registration=]
          <pre class=include-code>
            path: snippets/work.alice.example/8501f084-deb9-4775-8a35-2040df435d21.ttl
            highlight: turtle
            show: 8-14
          </pre>
        </td>
        <td>
          Ensure the container resource for the [=Data Registration=]
          conforms to `interops#DataRegistrationShape`. 
          <pre class=include-code>
            path: interop.tree
            highlight: turtle
            show: 100-103
          </pre>
          And also ensure the [=Data Registration=] only
          contains resources that conform to `pm:ProjectTree`.
          <pre class=include-code>
            path: snippets/data.example/pm-shapetrees.tree
            highlight: turtle
            show: 4-7
          </pre>
        </td>
      </tr>
      <tr>
        <td colspan=2>
        `------ 16e1eae9-20a5-489d-8380-8c07ca3805c4`
        </td>
      </tr>
      <tr>
        <td>
          Contents of the [=Data Instance=]
          <pre class=include-code>
            path: snippets/work.alice.example/16e1eae9-20a5-489d-8380-8c07ca3805c4.ttl
            highlight: turtle
            show: 8-12
          </pre>
        </td>
        <td>
          Ensure the resource for the [=Data Instance=]
          conforms to `pm:ProjectTree`.
          <pre class=include-code>
            path: snippets/data.example/pm-shapetrees.tree
            highlight: turtle
            show: 9-13
          </pre>
        </td>
      </tr>
    </tbody>
  </table>
</figure>

## Permission Model ## {#dr-permissions}

Almost all of the collaborative use cases between [=Agents=]
in the [=ecosystem=] are based on data furnished through the
[=Data Registry=].

Only a [=Social Agent=] or their [=Trusted Agents=] have the ability 
to manage contents and permissions across [=Data Registries=], 
including the creation and modification of [=Data Registrations=]. The
[table below](#permDataRegistry) illustrates this using the
[[#dr-hierarchy|resource hierarchy]] from the previous section.
*Other Agents* are granted varying levels of access by the [=Social Agent=] 
or their [=Trusted Agents=].

Note: [[#authz]] provides patterns for managing [=Access Grants=] and 
sending [=Access Receipts=] to the [=Agents=] that were granted access.

<figure id="permDataRegistry">
<figcaption>Permission model for [=Data Registry=] resources.
</figcaption>
  <table class="data permissions" align="left">
    <col>
    <col>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup span=2></colgroup>
    <thead>
      <tr>
        <th></th>
        <th></th>
        <th scope="colgroup">Owner</th>
        <th scope="colgroup">Public</th>
        <th scope="colgroup">Trusted Agents</th>
        <th scope="colgroup">Other Agents</th>
      </tr>
      <tr>
        <th scope="col">Resource</th>
        <th scope="col"></th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Subject</th>
        <th scope="col">Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>`/data/`</td>
        <td>[=Data Registry=]</td>
        <td>Control</td>
        <td>-</td>
        <td>Control</td>
        <td>-</td>
        <td>-</td>
      </tr>
      <tr>
        <td>`-- 8501f084...2040df43`</td>
        <td>[=Data Registration=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 16e1eae9...ca3805c4`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 886785d2...5ac36b7b`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- dae5015c...7ca7a198`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`-- df4ab227...fad10fb9`</td>
        <td>[=Data Registration=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 9b60a354...cb9da85c`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 6e545b74...b15cbdce`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- d33e01c8...ac9e3cc6`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 927108fa...14985cb9`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 180dda0b...c4f8c4dc`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`-- 3c9c9cff...fc7f916b`</td>
        <td>[=Data Registration=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 4376595a...f8d2547c`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
      <tr>
        <td>`---- 14c9fc6a...7f6de3ca`</td>
        <td>[=Data Instance=]</td>
        <td>Control</td>
        <td>Varies</td>
        <td>Control</td>
        <td>Grantee</td>
        <td>Varies</td>
      </tr>
    </tbody>
  </table>
</figure>

A significant amount of 
flexibility is needed in granting other Agents access to
data in the registry. It is also important to avoid 
the creation of permission swamps that are unwieldy for [=Social Agents=] 
to manage.

Organizing data by [=shape tree=] creates natural permission boundaries,
making authorization more intuitive and manageable.

Access is granted to a certain type of data by granting access
to the [[#dr-all|entire Data Registration]], or to
[[#dr-specific|specific Data Instances]] within it.

Note: [[!WAC]] doesn't have any mechanism to extend or modify
inherited permissions. Access Control Policies (ACP) is recommended
for optimal results.

### Access to a Data Registration ### {#dr-all}

Access granted at the [=Data Registration=] 
applies to all [=Data Instances=] within it.

The [=access modes=] listed in the table below can be combined as needed.

When the ability to create new [=Data Instances=] is provided via write
or append on a [=Data Registration=], the permissions granted to the
creator of the [=Data Instance=] can be further specified via
[interop:creatorAccessMode](interop.ttl#creatorAccessMode).

<figure>
<figcaption>Modes of access for a [=Data Registration=]</figcaption>
  <table class="data" align="left">
    <col>
    <col>
    <thead>
      <tr>
        <th scope="col">Mode</th>
        <th scope="col">Resultant Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th scope="row">Read</th>
        <td>Can read all existing and yet to be created
            [=Data Instances=]. Includes being able to see the full
            list of [=Data Instances=] in the registration.</td>
      </tr>
      <tr>
        <th scope="row">Write</th>
        <td>Can modify the [=Data Registration=], and all existing
            [=Data Instances=] within it.
            Can create new [=Data Instances=],
            and can delete them.</td>
      </tr>
      <tr>
        <th scope="row">Append</th>
        <td>Can only create new [=Data Instances=] within the
            [=Data Registration=].</td>
      </tr>
      <tr>
        <th scope="row">Read Permissions</th>
        <td>Can read permissions on the [=Data Registration=], as well
            as any [=Data Instances=] within it.</td>
      </tr>
      <tr>
        <th scope="row">Write Permissions</th>
        <td>Can change permissions on the [=Data Registration=], as well
            as any [=Data Instances=] within it.</td>
      </tr>
    </tbody>
  </table>
</figure>

### Access to Specific Data Instances ### {#dr-specific}

Access granted at the [=Data Instance=] level apply only to
that instance, and the resources within it.

The [=access modes=] listed in the table below can be combined as needed.

<figure>
<figcaption>Modes of access for a Specific
[=Data Instance=]</figcaption>
  <table class="data" align="left">
    <col>
    <col>
    <thead>
      <tr>
        <th scope="col">Mode</th>
        <th scope="col">Resultant Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th scope="row">Read</th>
        <td>Can list and read all resources within the
        [=Data Instance=].</td>
      </tr>
      <tr>
        <th scope="row">Write</th>
        <td>Can modify the [=Data Instance=] and any resources
            within it, including creating and deleting resources.</td>
      </tr>
      <tr>
        <th scope="row">Append</th>
        <td>Can create resources within the [=Data Instance=].
            Can add to a resource in the [=Data Instance=] but cannot
            remove anything from it, or delete it.</td>
      </tr>
      <tr>
        <th scope="row">Read Permissions</th>
        <td>Can read permissions on the [=Data Instance=]
            and any resources within it.</td>
      </tr>
      <tr>
        <th scope="row">Write Permissions</th>
        <td>Can change permissions on the [=Data Instance=]
            and any resources within it.</td>
      </tr>
    </tbody>
  </table>
</figure>
