Data Registration {#datareg}
=====================

The following operations pertain to
[Data Registration](https://solid.github.io/data-interoperability-panel/specification/#datareg)
in the [[SAI|Solid Application Interoperability Specification]].

Registering data in a [=Data Registry=] is primarily concerned with the
following two operations:

* Registering new *data types* as [=Data Registrations=]
* Storing and registering new *instances of those data types* as
    [=Data Instances=]

The following operations allow for the lookup, creation, and deletion
of [=Data Registrations=] and [=Data Instances=] in a
[=Data Registry=].

* [[#datareg-load]] - Load an existing [=Data Registration=]
* [[#datareg-create]] - Create a new [=Data Registration=]
* [[#datareg-create-instance]] - Create a new [=Data Instance=] for 
    a given [=Data Registration=]
* [[#datareg-delete]] - Delete a [=Data Registration=]
* [[#datareg-delete-instance]] - Delete a [=Data Instance=] for
    a given [=Data Registration=]

Note: Managing [=Data Registrations=] and the [=Data Instances=]
contained within them is inextricably linked to permissioning the data
for effective use and secure collaboration. This is covered at length
in [[SAI#authz]].

##  Load Data Registration ##  {#datareg-load}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>
        This operation returns a [=Data Registration=] the corresponds
        to a given [=shape tree=] in a [=Data Registry=].
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>`TREE`</td>
      <td>[=Shape tree=] to match against</td>
    </tr>
    <tr>
      <td>`REGISTRY`</td>
      <td>[=Data Registry=] to look for a match within</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>[=Data Registration=]</td>
      <td>Loaded by matching against `TREE` in `REGISTRY`</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. <em class="rfc2119">MUST</em> return `404` if `TREE` or `REGISTRY` 
    cannot be successfully dereferenced.
1. For each [=Data Registration=] `REGISTRATION` included 
    in `REGISTRY hasRegistration`
    1. return `REGISTRATION` if `REGISTRATION registeredShapeTree` == `TREE`

</div>

##  Create Data Registration ##  {#datareg-create}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>
        This operation creates a new [=Data Registration=] in a 
        [=Data Registry=] for a specific [=shape tree=].
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>`TREE`</td>
      <td>[=Shape tree=] to register</td>
    </tr>
    <tr>
      <td>`TYPE`</td>
      <td>Optional [rdf:type](https://www.w3.org/TR/rdf-schema/#ch_type) 
      to associate with the registration</td>
    </tr>
    <tr>
      <td>`REGISTRY`</td>
      <td>[=Data Registry=] where the registration will be created</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>[=Data Registration=]</td>
      <td>Created for `TREE` in `REGISTRY`</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. <em class="rfc2119">MUST</em> return `404` if `TREE` or `REGISTRY` 
    cannot be successfully dereferenced.
1. <em class="rfc2119">MUST</em> return `400` if an existing 
    [=Data Registration=] is returned from [[#datareg-load]] with 
    inputs: `TREE`, `REGISTRY`
1. Let `REG` be a newly initialized [=Data Registration=]
1. Let `REG registeredBy` be the current [=Social Agent=]
1. Let `REG registeredWith` be the [=identity=] of the [=Application=]
    executing the operation
1. Let `REG registeredAt` be the current date and time
1. Let `REG updatedAt` be the current date and time
1. Let `REG registeredShapeTree` be `TREE`
1. Let `REG registeredType` be `TYPE` if `TYPE` is not empty
1. PUT `REG` into the `REGISTRY` container 
    1. A \[UUID](https://www.ietf.org/rfc/rfc4122.txt) 
        <em class="rfc2119">MUST</em> be assigned as the resource name.
    1. [Plant](https://shapetrees.github.io/specification/spec#plant-shapetree)
        `TREE` with `REG` as the Target Container.
1. Assign permissions for `REG` per the [[SAI#datareg-permissions]]
1. Link `REG` to `REGISTRY` via `REGISTRY hasRegistration`
1. Return `REG`

</div>

##  Create Data Instance ##  {#datareg-create-instance}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>
        This operation will create a new [=Data Instance=] for
        a given [=Data Registration=]. It must be a conformant instance of
        the [=shape tree=] registered with the [=Data Registration=], per
        the validation structure detailed in [[SAI#datareg-hierarchy]].
        
        Assumes that a [=Data Registration=] has already been loaded
        by [[#datareg-load]] and provided as input.
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>`REGISTRATION`</td>
      <td>[=Data Registration=] to associated the new 
      [=Data Instance=] with</td>
    </tr>
    <tr>
      <td>`INSTANCE`</td>
      <td>Instance corresponding with `REGISTRATION registeredShapeTree`</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>[=Data Instance=]</td>
      <td>Created for `REGISTRATION` in `REGISTRY`</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. PUT `INSTANCE` into the `REGISTRATION` container
    1. A \[UUID](https://www.ietf.org/rfc/rfc4122.txt) 
        <em class="rfc2119">MUST</em> be assigned as the resource name.
    1. A [target shape tree](https://shapetrees.github.io/specification/spec#create-data-instance) 
        <em class="rfc2119">MUST</em> be assigned via the 
        `rel=http://shapetrees.org/#targetShapeTree` HTTP Link relation
    1. A [focus node](https://shapetrees.github.io/specification/spec#create-data-instance) for shape tree validation <em class="rfc2119">MUST</em> be assigned
        via the `rel=http://shapetrees.org/#FocusNode` HTTP Link relation
1. Return `INSTANCE`

</div>

##  Delete Data Registration ##  {#datareg-delete}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>
      This operation deletes a [=Data Registration=] from a
      [=Data Registry=].
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>`REGISTRATION`</td>
      <td>[=Data Registration=] to delete</td>
    </tr>
    <tr>
      <td>`REGISTRY`</td>
      <td>[=Data Registry=] of `REGISTRATION`</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>HTTP Status Code</td>
      <td>As returned from server</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. <em class="rfc2119">MUST</em> return `404` if `REGISTRATION`
    cannot be successfully dereferenced.
1. <em class="rfc2119">MUST</em> return `400` if `REGISTRATION`
    contains one or more [=Data Instances=].
1. Remove `REGISTRATION` from the graph of `REGISTRY` 
    via `REGISTRY hasRegistration`
1. DELETE `REGISTRATION`

</div>

Issue: Cleanup of related data may need to be specified

##  Delete Data Instance ##  {#datareg-delete-instance}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>
        This operation deletes a [=Data Instance=] from a
        [=Data Registration=].
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>`INSTANCE`</td>
      <td>[=Data Instance=] to delete</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>HTTP Status Code</td>
      <td>As returned from server</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. <em class="rfc2119">MUST</em> return `404` if `INSTANCE`
    cannot be successfully dereferenced.
1. If `INSTANCE` is a container
    1. Let `RESOURCES` be a hierarchy of all resources contained by `INSTANCE`,
        including any child containers and resources.
    1. DELETE each `RESOURCE` in `RESOURCES`, iterating up from the bottom
        of the `RESOURCES` hierarchy
1. DELETE `INSTANCE`

</div>

Issue: Cleanup of related data may need to be specified
