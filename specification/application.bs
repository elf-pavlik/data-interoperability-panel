Applications {#app}
=====================

An <dfn>Application</dfn> is a software-based [=Agent=] that a 
[=Social Agent=] uses to access, manipulate, and manage the data in 
their control, as well as the data theyâ€™ve been granted access to.

The information in the [=identity profile document=] of an [=Application=] 
is used during [[#authz]] to help [=Social Agents=] determine whether 
they want to use that [=Application=]. It lets them know what kind of 
data the [=Application=] needs access to and why. This lets the 
[=Social Agent=] make an informed choice.

The [=Application=] profile is designed to be publicly accessible.

An [=Application=] identifies the types of data it requires access to
by linking to [=Access Need Groups=].

[Class Definition](interop.ttl#Application) -
[Shape Definition](interop.shex#ApplicationShape) -
[Shape Tree Definition](interop.tree#ApplicationTree)

<table class="classinfo data" align="left" id="classApplication">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>applicationName</td>
      <td>xsd:string</td>
      <td>Name of the [=Application=]</td>
    </tr>
    <tr>
      <td>applicationDescription</td>
      <td>xsd:string</td>
      <td>Description of the [=Application=]</td>
    </tr>
    <tr>
      <td>applicationAuthor</td>
      <td>[SocialAgent](#classSocialAgent)</td>
      <td>[=Social Agent=] that authored the [=Application=]</td>
    </tr>
    <tr>
      <td>applicationThumbnail</td>
      <td>binary image</td>
      <td>Thumbnail for the [=Application=]</td>
    </tr>
    <tr>
      <td>hasAccessNeedGroup</td>
      <td>[AccessNeedGroup](#classAccessNeedGroup)</td>
      <td>[=Access Need Group=] representing types of data the
      [=Application=] needs to operate</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Application=] at https://app.example/id#app</figcaption>  
  <pre class=include-code>
  path: snippets/projectron.example/projectron.example.ttl
  highlight: turtle
  show: 9-15
  </pre> 
</figure>

## Resource Hierarchy ## {#app-hierarchy}

<table class="data tree" align="left">
  <col>
  <col>
  <col>
  <col>
  <thead>
    <tr>
      <th>Resource</th>
      <th>Class</th>
      <th>Shape</th>
      <th>Shape Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>`/id`</td>
      <td>[Application](#classApplication)</td>
      <td>[ApplicationShape](interop.shex#ApplicationShape)</td>
      <td>[ApplicationTree](interop.tree#ApplicationTree)</td>
    </tr>
    <tr>
      <td>`/thumb.svg`</td>
      <td>-</td>
      <td>-</td>
      <td>-</td>
    </tr>
  </tbody>
</table>

[=Application=] resources <em class="rfc2119">MAY</em> use any resource or
subject names. The names used herein have been selected for comprehension
and readability.

## Permission Model ## {#app-permissions}

<figure>
  <table class="data permissions" align="left">
    <col>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup></colgroup>
    <colgroup span=2></colgroup>
    <thead>
      <tr>
        <th></th>
        <th scope="colgroup">Agent</th>
        <th scope="colgroup">Public</th>
        <th scope="colgroup">Trusted Agents</th>
        <th scope="colgroup">Other Agents Granted Access</th>
      </tr>
      <tr>
        <th scope="col">Resource</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Access</th>
        <th scope="col">Subject</th>
        <th scope="col">Access</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>`/id`</td>
        <td>Control</td>
        <td>Read</td>
        <td>-</td>
        <td>-</td>
        <td>-</td>
      </tr>
      <tr>
        <td>`/thumb.svg`</td>
        <td>Control</td>
        <td>Read</td>
        <td>-</td>
        <td>-</td>
        <td>-</td>
      </tr>
    </tbody>
  </table>
</figure>
